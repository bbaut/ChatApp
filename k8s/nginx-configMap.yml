apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
data:
  my-nginx-config.conf: |
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
      listen 80;

      location / {
        proxy_pass http://client-service/;
      }

      location /graphql {
          proxy_pass http://middleware-service/graphql;
        }

      location /subscription {
        proxy_pass http://middleware-service/graphql;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_read_timeout 86400;
        proxy_hide_header 'Access-Control-Allow-Origin';
      }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
          - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              readOnly: true
              name: nginx-configmap
      volumes:
        - name: nginx-configmap
          configMap:
            name: nginx-configmap

---

kind: Service
apiVersion: v1
metadata:
  name: nginx
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80
    name: nginx