version: '3.9'

services:
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - data-volume-chatapp:/data/db
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports: 
        - 8081:8081
    depends_on:
        - mongo
    environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: root
        ME_CONFIG_MONGODB_PORT: 27017  
    links:
        - mongo
    networks:
        - mongo-network

  # auth:
  #   container_name: auth_service
  #   build:
  #     dockerfile: Dockerfile
  #     context: './auth_service'
  #   ports:
  #     - 4001:4001
  #   links:
  #     - mongo
  #   networks:
  #     - mongo-network
  
  # users:
  #   container_name: users_service
  #   build:
  #     dockerfile: Dockerfile
  #     context: './users_service'
  #   ports:
  #     - 4002:4002
  #   links:
  #     - mongo
  #   networks:
  #     - mongo-network

  # chat:
  #   container_name: chat_service
  #   build:
  #     dockerfile: Dockerfile
  #     context: './chat_service'
  #   ports:
  #     - 4003:4003
  #   links:
  #     - mongo
  #   networks:
  #     - mongo-network

  # nginx:
  #   container_name: nginx
  #   depends_on:
  #     - middleware
  #     - client
  #   restart: always
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./nginx
  #   ports:
  #     - '80:80'
  #   links:
  #     - middleware
  #     - client
  #   networks:
  #     - mongo-network

  # middleware:
  #   container_name: middleware
  #   build:
  #     dockerfile: Dockerfile
  #     context: './middleware'
  #   ports:
  #     - 4000:4000
  #   links:
  #     - auth
  #     - users
  #     - chat
  #   depends_on:
  #     - auth
  #     - users
  #     - chat
  #   networks:
  #     - mongo-network

  # client:
  #   container_name: client
  #   stdin_open: true
  #   build:
  #     dockerfile: Dockerfile
  #     context: './client'
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - mongo-network

volumes: 
  data-volume-chatapp: {}

networks:
  mongo-network:
    driver: bridge